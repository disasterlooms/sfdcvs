{"dataSourceLinks":[],"filters":[],"gridLayouts":[],"layouts":[],"steps":{"saql":{"broadcastFacet":false,"groups":[],"label":"DistiUnique_Reseller_a_Saql_Cogroup_1","numbers":[],"query":"q = load \"SalesData\";\nq = filter q by 'SHIPTO_COMPANY_STATE' in [\"AK\", \"AL\", \"AR\", \"AZ\", \"CA\", \"CO\", \"CT\", \"DC\", \"DE\", \"FL\", \"GA\", \"HI\", \"IA\", \"ID\", \"IL\", \"IN\", \"KS\", \"KY\", \"LA\", \"MA\", \"MD\", \"ME\", \"MI\", \"MN\", \"MO\", \"MS\", \"MT\", \"NC\", \"ND\", \"NE\", \"NH\", \"NJ\", \"NM\", \"NV\", \"NY\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VA\", \"VT\", \"WA\", \"WI\", \"WV\", \"WY\"];\nq = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [\"1 fiscal_year ago\"..\"current day\"];\nq = filter q by 'DistiSalesOut' == \"true\";\nq = filter q by 'Channel' == \"VAR\";\ntp = filter q by 'Tp' in [\"ALMO\", \"ASICP867IB\", \"DANDH867IB\", \"INGRA867IB\", \"SYNNX867IB\", \"TECHD867IB\"];\nq = filter q by 'Distributor.Name' in [\"ASI\"];\nq_A = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [\"current year\"..\"current day\"];\nq_B = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [\"1 year ago\"..\"1 year ago\"];\nq_C = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [dateRange([2021,1,1], [2021,3,31])];\nq_D = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [dateRange([2020,1,1], [2020,3,29])];\nq_F = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [dateRange([2021,4,1], [2021,6,30])];\nq_G = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [dateRange([2020,4,1], [2020,6,30])];\nq_I = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [dateRange([2021,7,1], [2021,9,30])];\nq_J = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [dateRange([2021,10,1], [2021,12,31])];\nq_K = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [dateRange([2020,7,1], [2020,9,30])];\nq_M = filter q by date('INVOICE_DATE_Year', 'INVOICE_DATE_Month', 'INVOICE_DATE_Day') in [dateRange([2020,10,1], [2020,12,31])];\nresult = group q by 'ResellerName' full, q_A by 'ResellerName' full, q_B by 'ResellerName' full, q_C by 'ResellerName' full, q_D by 'ResellerName' full, q_F by 'ResellerName' full, q_G by 'ResellerName' full, q_I by 'ResellerName' full, q_J by 'ResellerName' full, q_K by 'ResellerName' full, q_M by 'ResellerName';\nresult = foreach result generate coalesce(q_A.'ResellerName', q_B.'ResellerName', q_C.'ResellerName', q_D.'ResellerName', q_F.'ResellerName', q_G.'ResellerName', q_I.'ResellerName', q_J.'ResellerName', q_K.'ResellerName', q_M.'ResellerName', q.'ResellerName') as 'ResellerName', coalesce(sum(q_A.'REVENUE'),0) as 'CY', coalesce(sum(q_B.'REVENUE'),0) as 'PY', coalesce(sum(q_C.'REVENUE'),0) as 'Q1_CY', coalesce(sum(q_D.'REVENUE'),0) as 'Q1_PY', coalesce(sum(q_F.'REVENUE'),0) as 'Q2_CY', coalesce(sum(q_G.'REVENUE'),0) as 'Q2_PY', coalesce(sum(q_I.'REVENUE'),0) as 'Q3_CY', coalesce(sum(q_J.'REVENUE'),0) as 'Q4_CY', coalesce(sum(q_K.'REVENUE'),0) as 'Q3_PY', coalesce(sum(q_M.'REVENUE'),0) as 'Q4_PY', unique(q.'Distributor.Name') as 'O';\nresult = foreach result generate 'ResellerName', 'CY', 'PY', 'Q1_CY', 'Q1_PY', 'Q2_CY', 'Q2_PY', 'Q3_CY', 'Q4_CY', 'Q3_PY', 'Q4_PY', 'O', (Q1_CY - Q1_PY) / Q1_PY as 'E', (Q2_CY - Q2_PY) / Q2_PY as 'H', (Q3_CY - Q3_PY) / Q3_PY as 'L', (Q4_CY - Q4_PY) / Q4_PY as 'N';\nresult = filter result by 'O' == 1;\nvars = order result by ('CY' desc);\n\ntp = filter tp by 'Channel' == \"VAR\";\n\ntp = group tp by 'ResellerName';\ntp = foreach tp generate tp.'ResellerName' as 'ResellerName', unique(tp.'Tp') as 'UniqueBuyers';\ntp = filter tp by 'UniqueBuyers' == 1;\ntp = order tp by ('ResellerName' asc);\ntp = limit tp 10000;\n\nvars = cogroup vars by 'ResellerName', tp by 'ResellerName';\nvars = foreach vars generate vars.'ResellerName' as 'ResellerName', sum(vars.'Q1_PY') as  'Q1_PY', sum(vars.'Q1_CY') as  'Q1_CY',sum(vars.'Q2_PY') as   'Q2_PY',sum(vars.'Q2_CY') as   'Q2_CY', sum(vars.'Q3_PY') as  'Q3_PY', sum(vars.'Q3_CY') as 'Q3_CY',  sum(vars.'Q4_PY') as  'Q4_PY', sum(vars.'Q4_CY') as  'Q4_CY' , sum(vars.'PY') as 'PY',  sum(vars.'CY') as 'CY';\n\nvars = foreach vars generate vars.'ResellerName' as 'ResellerName', 'Q1_PY',  'Q1_CY','Q2_PY',  'Q2_CY', 'Q3_PY', 'Q3_CY',   'Q4_PY','Q4_CY' ,  'PY',   'CY';\n\nvars = foreach vars generate vars.'ResellerName' as 'ResellerName', 'Q1_PY',   \n'Q1_CY', (Q1_CY - Q1_PY) / Q1_PY as 'Q1 YoY',\n'Q2_PY',  'Q2_CY',\n(Q2_CY - Q2_PY) / Q2_PY as 'Q2 YoY',\n'Q3_PY', 'Q3_CY', \n(Q3_CY - Q3_PY) / Q3_PY as 'Q3 YoY',\n'Q4_PY','Q4_CY' ,\n(Q4_CY - Q4_PY) / Q4_PY as 'Q4 YoY',\n'PY',   'CY';\n\n\nsummary = group vars by 'ResellerName';\nsummary = foreach summary generate sum(sum('Q1_PY')) over([..] partition by all) as 'Q1_PY_total', sum(sum('Q1_CY')) over([..] partition by all) as 'Q1_CY_total',sum(sum('Q2_PY')) over([..] partition by all) as 'Q2_PY_total', sum(sum('Q2_CY')) over([..] partition by all) as 'Q2_CY_total', sum(sum('Q3_PY')) over([..] partition by all) as 'Q3_PY_total', sum(sum('Q3_CY')) over([..] partition by all) as 'Q3_CY_total', sum(sum('Q4_PY')) over([..] partition by all) as 'Q4_PY_total',sum(sum('Q4_CY')) over([..] partition by all) as 'Q4_CY_total',sum(sum('PY')) over([..] partition by all) as 'PY_total',sum(sum('CY')) over([..] partition by all) as 'CY_total';\n\n--summary = foreach summary generate sum(sum('CY')) over([..] partition by all) as 'CY_total', sum(sum('PY')) over([..] partition by all) as 'PY_total', sum(sum('Q1_CY')) over([..] partition by all) as 'Q1_CY_total', sum(sum('Q1_PY')) over([..] partition by all) as 'Q1_PY_total', sum(sum('E')) over([..] partition by all) as 'E_total', sum(sum('Q2_CY')) over([..] partition by all) as 'Q2_CY_total', sum(sum('Q2_PY')) over([..] partition by all) as 'Q2_PY_total', sum(sum('H')) over([..] partition by all) as 'H_total', sum(sum('Q3_CY')) over([..] partition by all) as 'Q3_CY_total', sum(sum('Q4_CY')) over([..] partition by all) as 'Q4_CY_total', sum(sum('Q3_PY')) over([..] partition by all) as 'Q3_PY_total', sum(sum('L')) over([..] partition by all) as 'L_total', sum(sum('Q4_PY')) over([..] partition by all) as 'Q4_PY_total', sum(sum('N')) over([..] partition by all) as 'N_total', sum(sum('O')) over([..] partition by all) as 'O_total';\n--summa\nsummary = limit summary 1;\nvars = order vars by ('CY' desc);\nvars = union vars, summary;\nvars = limit vars 10000;\n\n\n","receiveFacetSource":{"mode":"none","steps":[]},"selectMode":"none","strings":[],"type":"saql","useGlobal":false,"visualizationParameters":{"visualizationType":"comparisontable"}}},"widgets":{"saql_table":{"parameters":{"borderColor":"#001668","borderWidth":1,"cell":{"backgroundColor":"#FFFFFF","fontColor":"#16325c","fontSize":14},"columnProperties":{},"columns":[],"customBulkActions":[],"exploreLink":true,"header":{"backgroundColor":"#001668","fontColor":"#FFFFFF","fontSize":14},"innerMajorBorderColor":"#001668","innerMinorBorderColor":"#001668","mode":"fittocontainer","numberOfLines":2,"showActionMenu":true,"showRowIndexColumn":false,"step":"saql","totals":true,"verticalPadding":4},"type":"table"}}}