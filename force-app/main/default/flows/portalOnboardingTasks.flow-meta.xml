<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <actionCalls>
        <name>docUploadConfirmToUser</name>
        <label>docUploadConfirmToUser</label>
        <locationX>314</locationX>
        <locationY>2318</locationY>
        <actionName>Contact.pp_DocumentUploadconfirmation</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>thanks</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>getStatusOnboardingTask_0.Portal_Contact__c</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <actionCalls>
        <name>PortalDocumentUploaded</name>
        <label>PortalDocumentUploaded</label>
        <locationX>314</locationX>
        <locationY>2198</locationY>
        <actionName>Contact.Document_Uploaded_for_Review</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>docUploadConfirmToUser</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>getStatusOnboardingTask_0.Portal_Contact__c</elementReference>
            </value>
        </inputParameters>
    </actionCalls>
    <apiVersion>50.0</apiVersion>
    <assignments>
        <name>taskUrl</name>
        <label>taskUrl</label>
        <locationX>534</locationX>
        <locationY>398</locationY>
        <assignmentItems>
            <assignToReference>imageURL</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>getTaskInfo.CompletedTaskURL__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>TaskScreen</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Status</name>
        <label>Update Status</label>
        <locationX>314</locationX>
        <locationY>1718</locationY>
        <assignmentItems>
            <assignToReference>getStatusOnboardingTask_0.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Under Review</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>updateStatus</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Status_0</name>
        <label>Update Status</label>
        <locationX>754</locationX>
        <locationY>878</locationY>
        <assignmentItems>
            <assignToReference>getStatusOnboardingTask_0.Status__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Completed</stringValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>updateStatus_0</targetReference>
        </connector>
    </assignments>
    <choices>
        <name>None</name>
        <choiceText>--Select Payment Type--</choiceText>
        <dataType>String</dataType>
        <value>
            <stringValue></stringValue>
        </value>
    </choices>
    <decisions>
        <name>flowAction</name>
        <label>flowAction</label>
        <locationX>534</locationX>
        <locationY>638</locationY>
        <defaultConnector>
            <targetReference>Pricing_Agreement</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Action type Agreement</defaultConnectorLabel>
        <rules>
            <name>UploadDocument</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>actionType</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Upload</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>uploadPage</targetReference>
            </connector>
            <label>UploadDocument</label>
        </rules>
    </decisions>
    <decisions>
        <name>flowAction_0</name>
        <label>flowAction</label>
        <locationX>314</locationX>
        <locationY>878</locationY>
        <defaultConnector>
            <targetReference>Update_Status</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>notW9</defaultConnectorLabel>
        <rules>
            <name>W9Act</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>getTaskInfo.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>W9</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>getTaskInfo.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Canada W-8BEN</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>getContactInfo</targetReference>
            </connector>
            <label>W9Act</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>paymentType</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Portal_Spiff_Payment_Type__c</picklistField>
        <picklistObject>Contact</picklistObject>
    </dynamicChoiceSets>
    <formulas>
        <name>documentName</name>
        <dataType>String</dataType>
        <expression>{!getTaskInfo.Name}&amp;&apos; &apos;&amp;{!$User.FirstName}&amp;&apos; &apos;&amp;{!$User.LastName}&amp;&apos; &apos;&amp;{!getContactInfo.Account.Name}</expression>
    </formulas>
    <formulas>
        <name>isCompleteTask</name>
        <dataType>Boolean</dataType>
        <expression>{!taskStatus}==&apos;Completed&apos;</expression>
    </formulas>
    <formulas>
        <name>isUnderReview</name>
        <dataType>Boolean</dataType>
        <expression>text({!getStatusOnboardingTask_0.Status__c})!=&apos;Not Started&apos;</expression>
    </formulas>
    <formulas>
        <name>W9Canada</name>
        <dataType>Boolean</dataType>
        <expression>{!getTaskInfo.Name}==&apos;W9&apos;</expression>
    </formulas>
    <interviewLabel>portalOnboardingTasks {!$Flow.CurrentDateTime}</interviewLabel>
    <label>portalOnboardingTasks</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>createGSCTask_0</name>
        <label>createGSCTask</label>
        <locationX>314</locationX>
        <locationY>1958</locationY>
        <connector>
            <targetReference>updateContentVersionTtitle</targetReference>
        </connector>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <stringValue>00G1H0000059UYu</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>High</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Not Started</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <stringValue>Portal User Added Document</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Type</field>
            <value>
                <stringValue>To-Do</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>WhoId</field>
            <value>
                <elementReference>getStatusOnboardingTask_0.Portal_Contact__c</elementReference>
            </value>
        </inputAssignments>
        <object>Task</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>getContactInfo</name>
        <label>getContactInfo</label>
        <locationX>50</locationX>
        <locationY>998</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>uploadPage_0_0</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.ContactId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getStatusOnboardingTask_0</name>
        <label>getStatusOnboardingTask</label>
        <locationX>534</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>getTaskInfo</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>taskOnbRecordId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>PortalOnboardingProgress__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>getTaskInfo</name>
        <label>getTaskInfo</label>
        <locationX>534</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>taskUrl</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>getStatusOnboardingTask_0.Partner_Portal_Task__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Portal_Task__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>updateconPaymentType</name>
        <label>updateconPaymentType</label>
        <locationX>50</locationX>
        <locationY>1238</locationY>
        <connector>
            <targetReference>Update_Status</targetReference>
        </connector>
        <faultConnector>
            <targetReference>error</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$User.ContactId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>MailingCity</field>
            <value>
                <elementReference>paymentAddressForm.city</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingCountry</field>
            <value>
                <elementReference>paymentAddressForm.country</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingPostalCode</field>
            <value>
                <elementReference>paymentAddressForm.postalCode</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingState</field>
            <value>
                <elementReference>paymentAddressForm.province</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>MailingStreet</field>
            <value>
                <elementReference>paymentAddressForm.street</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Portal_Spiff_Payment_Type__c</field>
            <value>
                <elementReference>Select_Payment_Type_0_0</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>portalSpiffPayPalCustomerId__c</field>
            <value>
                <elementReference>Paypal_Customer_Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>portalSpiffPayPalEmail__c</field>
            <value>
                <elementReference>Paypal_Email</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>portalSpiffPayPalFirstName__c</field>
            <value>
                <elementReference>Paypal_First_Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>portalSpiffPayPalLastName__c</field>
            <value>
                <elementReference>Paypal_Last_Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>portalSpiffPayPalPhone__c</field>
            <value>
                <elementReference>Paypal_Phone</elementReference>
            </value>
        </inputAssignments>
        <object>Contact</object>
    </recordUpdates>
    <recordUpdates>
        <name>updateContentVersionTtitle</name>
        <label>updateContentVersionTtitle</label>
        <locationX>314</locationX>
        <locationY>2078</locationY>
        <connector>
            <targetReference>PortalDocumentUploaded</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ContentDocumentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>contentId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Title</field>
            <value>
                <elementReference>documentName</elementReference>
            </value>
        </inputAssignments>
        <object>ContentVersion</object>
    </recordUpdates>
    <recordUpdates>
        <name>updateStatus</name>
        <label>updateStatus</label>
        <locationX>314</locationX>
        <locationY>1838</locationY>
        <connector>
            <targetReference>createGSCTask_0</targetReference>
        </connector>
        <inputReference>getStatusOnboardingTask_0</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>updateStatus_0</name>
        <label>updateStatus</label>
        <locationX>754</locationX>
        <locationY>998</locationY>
        <connector>
            <targetReference>thanks_0</targetReference>
        </connector>
        <inputReference>getStatusOnboardingTask_0</inputReference>
    </recordUpdates>
    <runInMode>SystemModeWithoutSharing</runInMode>
    <screens>
        <name>error</name>
        <label>error</label>
        <locationX>314</locationX>
        <locationY>1358</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>errormessage</name>
            <fieldText>&lt;p&gt;Sorry, there was an error updating your setup. The Partner Program has been notified. &lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;You can also create a support ticket on the support page. please give them the following error message: &lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;{!$Flow.FaultMessage}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>Pricing_Agreement</name>
        <label>Pricing Agreement</label>
        <locationX>754</locationX>
        <locationY>758</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Update_Status_0</targetReference>
        </connector>
        <fields>
            <name>AgreementTextField</name>
            <fieldText>&lt;p&gt;{!AgreementText}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>mapPolicy</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;ViewSonic Corporation&lt;/b&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b&gt;Minimum Advertised Price (MAP) Policy&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Calibri, sans-serif;&quot;&gt;ViewSonic Corporation unilaterally adopts this Minimum Advertised Price (“MAP”) Policy, which is applicable to any and all retail and ViewSonic-Authorized Internet Partners (collectively, “Partners”). Advertising allows consumers to determine the value of a product. ViewSonic Corporation’s MAP Policy is designed to maintain the integrity of its product line and brand, while encouraging strong after-sales support of its products. This policy requires Partners to advertise ViewSonic products at a price not lower than the published MAP Price as specified on the official Price List.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Calibri, sans-serif;&quot;&gt;This MAP Policy is applicable to any and all forms of advertising, including but not limited to – newspaper Run of Press (ROP) circulars, catalog, the Internet, shopping/comparison/third-party websites, direct mail, television and radio. Internet advertised prices of ViewSonic products must be at or above MAP.&amp;nbsp;This MAP Policy does not limit the ability of a Partner to advertise that it “has the lowest prices,” “will meet or beat any competitor’s price,” that consumers should “call for a price,” or phrases of similar import as long as the price advertised for the products is not below MAP. Nor does this MAP Policy limit the ability of a Partner to offer coupons or other promotional discounts for the purchase of ViewSonic products, provided that the coupon or other promotional discount is not presented to the consumer in such a way that, when presented with the advertised product price, the presentation reflects a net price below MAP. Nor does this MAP Policy limit the ability of a Partner using a website to offer “in-cart” pricing below MAP, provided that the “cart” is password protected, encrypted, or otherwise is the price at final checkout.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Calibri, sans-serif;&quot;&gt;This MAP Policy does not require a Partner to sell any ViewSonic product at any minimum price, does not require any Partner to resell ViewSonic products at the minimum advertised price, and does not otherwise set minimum or maximum resale prices for ViewSonic products in any respect. However, Partners must comply with ViewSonic’s stated MAP Policy in order to qualify for advertising co-op support. The MAP Policy provides explicit guidelines regarding the advertisement of ViewSonic products and advertising funds, as well as other promotional payments.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Calibri, sans-serif;&quot;&gt;Violations of the MAP Policy may result in the forfeiture of benefits, including, but not limited to:&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Calibri, sans-serif;&quot;&gt;1.&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: 7pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Calibri, sans-serif; font-size: 10pt;&quot;&gt;MDF and/or Co-op accrued for the violating SKU may be deducted from Marketing Claims based on units sold, during the month the MAP violation occurred.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Calibri, sans-serif;&quot;&gt;2.&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: 7pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Calibri, sans-serif; font-size: 10pt;&quot;&gt;POS Rebates for the violating SKU may be nullified, and any claims for the referenced POS Rebate during the month the MAP violation occurred denied.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Calibri, sans-serif;&quot;&gt;3.&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: 7pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Calibri, sans-serif; font-size: 10pt;&quot;&gt;If a Mail-In Rebate was in place, said Mail-In Rebate may be nullified and the violating Partners will be held responsible for the payment of each Mail-In Rebate ViewSonic issues for each violating SKU sold by the Partner.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Calibri, sans-serif;&quot;&gt;4.&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: 7pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Calibri, sans-serif; font-size: 10pt;&quot;&gt;Distribution SPA/Instant rebates/Bid matrix and volume discounts may be nullified immediately for the violating SKU; and/or&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: Calibri, sans-serif;&quot;&gt;5.&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: 7pt;&quot;&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style=&quot;font-family: Calibri, sans-serif; font-size: 10pt;&quot;&gt;the violating Partner may be completely removed from advertising-related pricing incentives.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Calibri, sans-serif;&quot;&gt;ViewSonic Corporation reserves the right to take the above-mentioned actions without providing advance notice, in addition to any and all appropriate action. Partners are expected to maintain the integrity of the MAP policy regardless of violations by other resellers in the Channel.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Calibri, sans-serif;&quot;&gt;The implementation of this MAP Policy is solely ViewSonic’s decision and responsibility. No employee or sales representative of ViewSonic has authority to discuss or modify this MAP Policy. Any questions about this MAP Policy must be in writing and directed via e-mail to &lt;/span&gt;&lt;a href=&quot;mailto:MAP@ViewSonic.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;font-size: 10pt; font-family: Calibri, sans-serif; color: blue;&quot;&gt;MAP@ViewSonic.com&lt;/a&gt;&lt;a href=&quot;mailto:MAP@ViewSonic.com&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot; style=&quot;font-size: 10pt; font-family: Calibri, sans-serif; color: windowtext;&quot;&gt;.&lt;/a&gt;&lt;span style=&quot;font-size: 10pt; font-family: Calibri, sans-serif;&quot;&gt; This is the only means by which inquiries concerning the MAP Policy will be received.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10pt; font-family: Calibri, sans-serif;&quot;&gt;Compliance with this MAP Policy remains solely in the discretion of each Partner.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;ViewSonic Corporation&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-size: 10px;&quot;&gt;MAP Policy Guidelines – January 2021&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p style=&quot;text-align: center;&quot;&gt;&lt;br&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>mapPolicy</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>fasfdasfdasdfasdf</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>I_Agree</name>
            <dataType>Boolean</dataType>
            <defaultValue>
                <booleanValue>false</booleanValue>
            </defaultValue>
            <fieldText>I Agree</fieldText>
            <fieldType>InputField</fieldType>
            <isRequired>true</isRequired>
            <validationRule>
                <errorMessage>&lt;p&gt;You must agree to complete onboarding and be qualified for special pricing and SPIFFS&lt;/p&gt;</errorMessage>
                <formulaExpression>{!I_Agree} == true</formulaExpression>
            </validationRule>
        </fields>
        <fields>
            <name>buttonagree</name>
            <extensionName>c:flowCustomNavigationButton</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>customLabel</name>
                <value>
                    <stringValue>Submit</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>showPrev</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>TaskScreen</name>
        <label>TaskScreen</label>
        <locationX>534</locationX>
        <locationY>518</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>flowAction</targetReference>
        </connector>
        <fields>
            <name>TaskScreen_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>TaskScreen_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>portalOnboardTaskcmp</name>
                    <extensionName>c:portalOnboardingComponent</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>button</name>
                        <value>
                            <elementReference>button</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>description</name>
                        <value>
                            <elementReference>description</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>title</name>
                        <value>
                            <elementReference>taskName</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>maxImageDimensions</name>
                        <value>
                            <elementReference>maxImageDimension</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>taskStatus</name>
                        <value>
                            <elementReference>getStatusOnboardingTask_0.Id</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>taskName</name>
                        <value>
                            <elementReference>taskName</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>actionType</name>
                        <value>
                            <elementReference>actionType</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>completed</name>
                        <value>
                            <elementReference>taskCompletedURL</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>incomplete</name>
                        <value>
                            <elementReference>isCompleteTask</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpTask</name>
                        <value>
                            <booleanValue>true</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpButton</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpDescription</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpImage</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>TaskScreen_Section1_Column2</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>cmpDescription</name>
                    <extensionName>c:portalOnboardingComponent</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>cmpButton</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpImage</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpTask</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpDescription</name>
                        <value>
                            <booleanValue>true</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>description</name>
                        <value>
                            <elementReference>description</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>downloadString</name>
                        <value>
                            <elementReference>getTaskInfo.Document_Download_Text__c</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>downloadUrl</name>
                        <value>
                            <elementReference>getTaskInfo.Document_Download_URL__c</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>UrlTwo</name>
                        <value>
                            <elementReference>W9Canada</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>downloadString2</name>
                        <value>
                            <elementReference>getTaskInfo.Document_Download_Text_2__c</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>downloadUrl2</name>
                        <value>
                            <elementReference>getTaskInfo.Document_Download_URL_2__c</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <fields>
                <name>TaskScreen_Section1_Column3</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>buttonCMP</name>
                    <extensionName>c:portalOnboardingComponent</extensionName>
                    <fieldType>ComponentInstance</fieldType>
                    <inputParameters>
                        <name>cmpButton</name>
                        <value>
                            <booleanValue>true</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpDescription</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpImage</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>cmpTask</name>
                        <value>
                            <booleanValue>false</booleanValue>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>actionType</name>
                        <value>
                            <elementReference>actionType</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>button</name>
                        <value>
                            <elementReference>button</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>completed</name>
                        <value>
                            <elementReference>taskCompletedURL</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>incomplete</name>
                        <value>
                            <elementReference>isCompleteTask</elementReference>
                        </value>
                    </inputParameters>
                    <inputParameters>
                        <name>inProgress</name>
                        <value>
                            <elementReference>isUnderReview</elementReference>
                        </value>
                    </inputParameters>
                    <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
                    <isRequired>true</isRequired>
                    <storeOutputAutomatically>true</storeOutputAutomatically>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>4</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>thanks</name>
        <label>thanks</label>
        <locationX>314</locationX>
        <locationY>2438</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ThanksConfirmation</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;We appreciate your submission and it will be reviewed in the next 1 to 2 business days. &lt;span class=&quot;ql-cursor&quot;&gt;﻿&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>thanks_0</name>
        <label>thanks</label>
        <locationX>754</locationX>
        <locationY>1118</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>ThanksConfirmation_0</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Great! Thanks.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>uploadPage</name>
        <label>uploadPage</label>
        <locationX>314</locationX>
        <locationY>758</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>flowAction_0</targetReference>
        </connector>
        <fields>
            <name>step1</name>
            <fieldText>&lt;p style=&quot;text-align: right;&quot;&gt;&lt;b style=&quot;font-size: 14px;&quot;&gt;Step 1 of 2&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getTaskInfo.Name</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>W9</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>stepNotw9</name>
            <fieldText>&lt;p style=&quot;text-align: right;&quot;&gt;&lt;b style=&quot;color: rgb(62, 62, 60); background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;Step 1 of 1&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getTaskInfo.Name</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>W9</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>textHeader</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Please add your completed W9 &lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getTaskInfo.Name</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>W9</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>certheader</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;background-color: rgb(255, 255, 255); font-size: 14px; color: rgb(62, 62, 60);&quot;&gt;Please add your completed Reseller Certification&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getTaskInfo.Name</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>W9</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>uploadPreview</name>
            <extensionName>c:portalBrandLogo</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>customLabelbtn</name>
                <value>
                    <stringValue>Next</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>relatedId</name>
                <value>
                    <elementReference>$User.ContactId</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <outputParameters>
                <assignToReference>contentId</assignToReference>
                <name>docId</name>
            </outputParameters>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <screens>
        <name>uploadPage_0_0</name>
        <label>uploadPage</label>
        <locationX>50</locationX>
        <locationY>1118</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>updateconPaymentType</targetReference>
        </connector>
        <fields>
            <name>step2_0</name>
            <fieldText>&lt;p style=&quot;text-align: right;&quot;&gt;&lt;b style=&quot;background-color: rgb(255, 255, 255); font-size: 14px;&quot;&gt;Step 2 of 2&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>textHeader_0_0</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-size: 14px;&quot;&gt;Please Select How you Would Like your Incentives Paid&lt;/span&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Select_Payment_Type_0_0</name>
            <choiceReferences>None</choiceReferences>
            <choiceReferences>paymentType</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Select Payment Type</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>true</isRequired>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>getTaskInfo.Name</leftValueReference>
                    <operator>Contains</operator>
                    <rightValue>
                        <stringValue>W9</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>PaymentAddress</name>
            <fieldText>&lt;p style=&quot;text-align: center;&quot;&gt;&lt;b style=&quot;color: rgb(166, 43, 43); font-size: 18px;&quot;&gt;Please Verify the Payment Address. This is where we will mail Spiff Reward Checks if different than the Company Address.&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>uploadPage_0_0_Section1</name>
            <fieldType>RegionContainer</fieldType>
            <fields>
                <name>uploadPage_0_0_Section1_Column1</name>
                <fieldType>Region</fieldType>
                <fields>
                    <name>Paypal_Customer_Id</name>
                    <dataType>String</dataType>
                    <fieldText>Paypal Customer Id</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Paypal_Email</name>
                    <dataType>String</dataType>
                    <fieldText>Paypal Email</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Paypal_First_Name</name>
                    <dataType>String</dataType>
                    <fieldText>Paypal First Name</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Paypal_Last_Name</name>
                    <dataType>String</dataType>
                    <fieldText>Paypal Last Name</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <fields>
                    <name>Paypal_Phone</name>
                    <dataType>String</dataType>
                    <fieldText>Paypal Phone</fieldText>
                    <fieldType>InputField</fieldType>
                    <isRequired>true</isRequired>
                </fields>
                <inputParameters>
                    <name>width</name>
                    <value>
                        <stringValue>12</stringValue>
                    </value>
                </inputParameters>
                <isRequired>false</isRequired>
            </fields>
            <isRequired>false</isRequired>
            <regionContainerType>SectionWithoutHeader</regionContainerType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Select_Payment_Type_0_0</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>Paypal</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>paymentAddressForm</name>
            <extensionName>flowruntime:address</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>city</name>
                <value>
                    <elementReference>getContactInfo.MailingCity</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>country</name>
                <value>
                    <elementReference>getContactInfo.MailingCountry</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>postalCode</name>
                <value>
                    <elementReference>getContactInfo.MailingPostalCode</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>province</name>
                <value>
                    <elementReference>getContactInfo.MailingState</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>street</name>
                <value>
                    <elementReference>getContactInfo.MailingStreet</elementReference>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Select_Payment_Type_0_0</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>Paypal</stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>submit_0_0</name>
            <extensionName>c:flowCustomNavigationButton</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>customLabel</name>
                <value>
                    <stringValue>Submit for Review</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>showPrev</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>disableBtn</name>
                <value>
                    <booleanValue>false</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>state</name>
                <value>
                    <elementReference>paymentAddressForm.province</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>street</name>
                <value>
                    <elementReference>paymentAddressForm.street</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>city</name>
                <value>
                    <elementReference>paymentAddressForm.city</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>country</name>
                <value>
                    <elementReference>PaymentAddress</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>zip</name>
                <value>
                    <elementReference>paymentAddressForm.postalCode</elementReference>
                </value>
            </inputParameters>
            <inputParameters>
                <name>addressValidation</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Select_Payment_Type_0_0</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue>--Select Payment Type--</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Select_Payment_Type_0_0</leftValueReference>
                    <operator>NotEqualTo</operator>
                    <rightValue>
                        <stringValue></stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <fields>
            <name>disabledNext</name>
            <extensionName>c:flowCustomNavigationButton</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>disableBtn</name>
                <value>
                    <booleanValue>true</booleanValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>customLabel</name>
                <value>
                    <stringValue>Please Select Payment Type To Submit</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
            <visibilityRule>
                <conditionLogic>or</conditionLogic>
                <conditions>
                    <leftValueReference>Select_Payment_Type_0_0</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue>--Select Payment Type--</stringValue>
                    </rightValue>
                </conditions>
                <conditions>
                    <leftValueReference>Select_Payment_Type_0_0</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <stringValue></stringValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>false</showFooter>
        <showHeader>false</showHeader>
    </screens>
    <start>
        <locationX>408</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getStatusOnboardingTask_0</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>actionType</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>AgreementText</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>button</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>contentId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>ContentIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>description</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>gscQueue</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>imageURL</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>maxImageDimension</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue>max-width: 50%;max-width: 50%;</stringValue>
        </value>
    </variables>
    <variables>
        <name>onboardingTaskName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>taskCompletedURL</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>taskId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>taskName</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>taskOnbRecordId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
    <variables>
        <name>taskProgress</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>PortalOnboardingProgress__c</objectType>
    </variables>
    <variables>
        <name>taskProgressField</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>PortalOnboardingProgress__c</objectType>
    </variables>
    <variables>
        <name>taskStatus</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
    </variables>
</Flow>
