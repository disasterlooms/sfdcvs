<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>52.0</apiVersion>
    <assignments>
        <name>newPrice</name>
        <label>newPrice</label>
        <locationX>270</locationX>
        <locationY>815</locationY>
        <assignmentItems>
            <assignToReference>recordPrice.UnitPrice</assignToReference>
            <operator>Assign</operator>
            <value>
                <numberValue>9999999.0</numberValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordPrice.CurrencyIsoCode</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>loopCurrencies.IsoCode</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordPrice.Product2Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordPrice.Pricebook2Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>pricebookStandard.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>recordPrice.IsActive</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newPrices</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>recordPrice</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>loopCurrencies</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>checkifPricebookFound</name>
        <label>checkifPricebookFound</label>
        <locationX>512</locationX>
        <locationY>575</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>StandardFound</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>pricebookStandard.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>loopCurrencies</targetReference>
            </connector>
            <label>StandardFound</label>
        </rules>
    </decisions>
    <decisions>
        <name>productCode</name>
        <label>productCode</label>
        <locationX>182</locationX>
        <locationY>1151</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>ifNull</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.ProductCode</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>ProductCodeUpdate</targetReference>
            </connector>
            <label>ifNull</label>
        </rules>
    </decisions>
    <interviewLabel>newProductAddStandardEntry {!$Flow.CurrentDateTime}</interviewLabel>
    <label>newProductAddStandardEntry</label>
    <loops>
        <name>loopCurrencies</name>
        <label>loopCurrencies</label>
        <locationX>182</locationX>
        <locationY>695</locationY>
        <collectionReference>getCurrencies</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>newPrice</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>createPricesActiveCurrencies</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>createPricesActiveCurrencies</name>
        <label>createPricesActiveCurrencies</label>
        <locationX>182</locationX>
        <locationY>1031</locationY>
        <connector>
            <targetReference>productCode</targetReference>
        </connector>
        <inputReference>newPrices</inputReference>
    </recordCreates>
    <recordLookups>
        <name>getCurrencies</name>
        <label>getCurrencies</label>
        <locationX>512</locationX>
        <locationY>335</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>pricebookStandard</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>CurrencyType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>pricebookStandard</name>
        <label>pricebookStandard</label>
        <locationX>512</locationX>
        <locationY>455</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>checkifPricebookFound</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsStandard</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Pricebook2</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>ProductCodeUpdate</name>
        <label>ProductCodeUpdate</label>
        <locationX>50</locationX>
        <locationY>1271</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>ProductCode</field>
            <value>
                <elementReference>$Record.Name</elementReference>
            </value>
        </inputAssignments>
        <object>Product2</object>
    </recordUpdates>
    <start>
        <locationX>386</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>getCurrencies</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CreatedById</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue>005A0000000U28D</stringValue>
            </value>
        </filters>
        <object>Product2</object>
        <recordTriggerType>Create</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>newPrices</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>PricebookEntry</objectType>
    </variables>
    <variables>
        <name>recordPrice</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>PricebookEntry</objectType>
    </variables>
</Flow>
